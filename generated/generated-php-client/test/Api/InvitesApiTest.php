<?php
/**
 * InvitesApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  JeedomOpenAI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace JeedomOpenAI\Test\Api;

use \JeedomOpenAI\Configuration;
use \JeedomOpenAI\ApiException;
use \JeedomOpenAI\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InvitesApiTest Class Doc Comment
 *
 * @category Class
 * @package  JeedomOpenAI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InvitesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteInvite
     *
     * Delete an invite. If the invite has already been accepted, it cannot be deleted..
     *
     */
    public function testDeleteInvite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for inviteUser
     *
     * Create an invite for a user to the organization. The invite must be accepted by the user before they have access to the organization..
     *
     */
    public function testInviteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInvites
     *
     * Returns a list of invites in the organization..
     *
     */
    public function testListInvites()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveInvite
     *
     * Retrieves an invite..
     *
     */
    public function testRetrieveInvite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
