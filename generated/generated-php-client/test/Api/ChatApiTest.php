<?php
/**
 * ChatApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  JeedomOpenAI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace JeedomOpenAI\Test\Api;

use \JeedomOpenAI\Configuration;
use \JeedomOpenAI\ApiException;
use \JeedomOpenAI\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ChatApiTest Class Doc Comment
 *
 * @category Class
 * @package  JeedomOpenAI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ChatApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createChatCompletion
     *
     * **Starting a new project?** We recommend trying [Responses](/docs/api-reference/responses)  to take advantage of the latest OpenAI platform features. Compare [Chat Completions with Responses](/docs/guides/responses-vs-chat-completions?api-mode=responses).  ---  Creates a model response for the given chat conversation. Learn more in the [text generation](/docs/guides/text-generation), [vision](/docs/guides/vision), and [audio](/docs/guides/audio) guides.  Parameter support can differ depending on the model used to generate the response, particularly for newer reasoning models. Parameters that are only supported for reasoning models are noted below. For the current state of  unsupported parameters in reasoning models,  [refer to the reasoning guide](/docs/guides/reasoning)..
     *
     */
    public function testCreateChatCompletion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteChatCompletion
     *
     * Delete a stored chat completion. Only Chat Completions that have been created with the `store` parameter set to `true` can be deleted..
     *
     */
    public function testDeleteChatCompletion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChatCompletion
     *
     * Get a stored chat completion. Only Chat Completions that have been created with the `store` parameter set to `true` will be returned..
     *
     */
    public function testGetChatCompletion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChatCompletionMessages
     *
     * Get the messages in a stored chat completion. Only Chat Completions that have been created with the `store` parameter set to `true` will be returned..
     *
     */
    public function testGetChatCompletionMessages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listChatCompletions
     *
     * List stored Chat Completions. Only Chat Completions that have been stored with the `store` parameter set to `true` will be returned..
     *
     */
    public function testListChatCompletions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateChatCompletion
     *
     * Modify a stored chat completion. Only Chat Completions that have been created with the `store` parameter set to `true` can be modified. Currently, the only supported modification is to update the `metadata` field..
     *
     */
    public function testUpdateChatCompletion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
